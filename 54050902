/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package thread_browser;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Thanongdaje T
 */
public class Browser extends javax.swing.JFrame {

    /**
     * Creates new form Browser
     */
    public Browser() {
        initComponents();
        setTitle("Nutprawe Trerattanajutawat s4050902@kmitl.ac.th - Java Web Browser (Network Programming Class Assignment)");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        getPage = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        urlA = new javax.swing.JTextField();
        urlB = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        areaA = new javax.swing.JEditorPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaB = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        threadA = new javax.swing.JEditorPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        threadB = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 600));
        setResizable(false);

        getPage.setText("Get Page");
        getPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getPageActionPerformed(evt);
            }
        });

        jLabel1.setText("URL :");

        jLabel2.setText("URL :");

        areaA.setEditable(false);
        jScrollPane3.setViewportView(areaA);

        areaB.setEditable(false);
        jScrollPane1.setViewportView(areaB);

        threadA.setEditable(false);
        jScrollPane2.setViewportView(threadA);

        threadB.setEditable(false);
        jScrollPane4.setViewportView(threadB);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(urlA)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getPage, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(urlB))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(urlA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(urlB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(getPage)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void getPageActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        try{
            areaA.setPage(urlA.getText()); 
            
            threadA.setText(threadA.getText() + " Thread_A : Start\n");
            threadA.setText(threadA.getText() + " Thread_A : Get page >> " + urlA.getText() + "\n");
            threadA.setText(threadA.getText() + " Thread_A : Print HTTP Header\n\n");		
            Print_HeaderA(urlA.getText(), "Thread_A : ");
            threadA.setText(threadA.getText() + " Thread_A complete!!!!!\n");
           
            areaB.setPage(urlB.getText());
            
            threadB.setText(threadB.getText() + " Thread_B : Start\n");
            threadB.setText(threadB.getText() + " Thread_B : Get page >> " + urlB.getText() + "\n"); 
            threadB.setText(threadB.getText() + " Thread_B : Print HTTP Header\n\n");		
            Print_HeaderB(urlB.getText(), "Thread_B : ");
            threadB.setText(threadB.getText() + " Thread_B complete!!!!!\n");
        }
        catch(Exception e){
            threadA.setText("Error >> "+e);
            threadB.setText("Error >> "+e);
        }    
    }                                       

    /**
     * @param args the command line arguments
     */
    
    private void Print_HeaderA(String url, String thread) {
        try {
            URL obj = new URL(url);
            URLConnection connect = obj.openConnection();
            java.util.Map<String, java.util.List<String>> mapp = connect.getHeaderFields();
            threadA.setText(threadA.getText()+"Header >> " + thread + "\n\n");
            for (java.util.Map.Entry<String, java.util.List<String>> entry : mapp.entrySet()) {
                threadA.setText(threadA.getText() + thread + entry.getKey() + " ,Value : " + entry.getValue()+"\n");
            }
            threadA.setText(threadA.getText()+"\n");
        } 
        catch (Exception e) {
            threadB.setText("Error >> "+e);
        }
       
    }
    
     private void Print_HeaderB(String url, String thread) {
        try {
            URL obj = new URL(url);
            URLConnection connect = obj.openConnection();
            java.util.Map<String, java.util.List<String>> mapp = connect.getHeaderFields();
            threadB.setText(threadB.getText()+"Header >> " + thread + "\n\n");
            for (java.util.Map.Entry<String, java.util.List<String>> entry : mapp.entrySet()) {
                threadB.setText(threadB.getText() + thread + entry.getKey() + " ,Value : " + entry.getValue()+"\n");
            }
            threadB.setText(threadB.getText()+"\n");
        } 
        catch (Exception e) {
            threadB.setText("Error >> "+e);
        }
       
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Browser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Browser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Browser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Browser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Browser().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JEditorPane areaA;
    private javax.swing.JEditorPane areaB;
    private javax.swing.JButton getPage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JEditorPane threadA;
    private javax.swing.JEditorPane threadB;
    private javax.swing.JTextField urlA;
    private javax.swing.JTextField urlB;
    // End of variables declaration                   

    
}
